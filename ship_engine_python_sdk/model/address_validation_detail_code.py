# coding: utf-8

"""
    ShipEngine API

    ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 

    The version of the OpenAPI document: 1.1.202403202303
    Contact: sales@shipengine.com
    Created by: https://www.shipengine.com/contact/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from ship_engine_python_sdk import schemas  # noqa: F401


class AddressValidationDetailCode(
    schemas.EnumBase,
    schemas.StrSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    The detailed error codes that can be returned by the address validation API
    """


    class MetaOapg:
        enum_value_to_name = {
            "unsupported_country": "UNSUPPORTED_COUNTRY",
            "non_supported_country": "NON_SUPPORTED_COUNTRY",
            "minimum_postal_code_verification_failed": "MINIMUM_POSTAL_CODE_VERIFICATION_FAILED",
            "street_does_not_match_unique_street_name": "STREET_DOES_NOT_MATCH_UNIQUE_STREET_NAME",
            "multiple_directionals": "MULTIPLE_DIRECTIONALS",
            "multiple_matches": "MULTIPLE_MATCHES",
            "suite_not_valid": "SUITE_NOT_VALID",
            "suite_missing": "SUITE_MISSING",
            "incompatible_paired_labels": "INCOMPATIBLE_PAIRED_LABELS",
            "invalid_house_number": "INVALID_HOUSE_NUMBER",
            "missing_house_number": "MISSING_HOUSE_NUMBER",
            "invalid_box_number": "INVALID_BOX_NUMBER",
            "invalid_charge_event": "INVALID_CHARGE_EVENT",
            "missing_box_number": "MISSING_BOX_NUMBER",
            "missing_cmra_or_private_mail_box_number": "MISSING_CMRA_OR_PRIVATE_MAIL_BOX_NUMBER",
            "suite_has_no_secondaries": "SUITE_HAS_NO_SECONDARIES",
            "postal_code_changed_or_added": "POSTAL_CODE_CHANGED_OR_ADDED",
            "state_province_changed_or_added": "STATE_PROVINCE_CHANGED_OR_ADDED",
            "city_locality_changed_or_added": "CITY_LOCALITY_CHANGED_OR_ADDED",
            "urbanization_changed": "URBANIZATION_CHANGED",
            "street_name_spelling_changed_or_added": "STREET_NAME_SPELLING_CHANGED_OR_ADDED",
            "street_name_type_changed_or_added": "STREET_NAME_TYPE_CHANGED_OR_ADDED",
            "street_direction_changed_or_added": "STREET_DIRECTION_CHANGED_OR_ADDED",
            "suite_type_changed_or_added": "SUITE_TYPE_CHANGED_OR_ADDED",
            "suite_unit_number_changed_or_added": "SUITE_UNIT_NUMBER_CHANGED_OR_ADDED",
            "double_dependent_locality_changed_or_added": "DOUBLE_DEPENDENT_LOCALITY_CHANGED_OR_ADDED",
            "subadministrative_area_changed_or_added": "SUBADMINISTRATIVE_AREA_CHANGED_OR_ADDED",
            "subnational_area_changed_or_added": "SUBNATIONAL_AREA_CHANGED_OR_ADDED",
            "po_box_changed_or_added": "PO_BOX_CHANGED_OR_ADDED",
            "premise_type_changed_or_added": "PREMISE_TYPE_CHANGED_OR_ADDED",
            "house_number_changed": "HOUSE_NUMBER_CHANGED",
            "organization_changed_or_added": "ORGANIZATION_CHANGED_OR_ADDED",
            "partially_verified_to_state_level": "PARTIALLY_VERIFIED_TO_STATE_LEVEL",
            "partially_verified_to_city_level": "PARTIALLY_VERIFIED_TO_CITY_LEVEL",
            "partially_verified_to_street_level": "PARTIALLY_VERIFIED_TO_STREET_LEVEL",
            "partially_verified_to_premise_level": "PARTIALLY_VERIFIED_TO_PREMISE_LEVEL",
            "verified_to_state_level": "VERIFIED_TO_STATE_LEVEL",
            "verified_to_city_level": "VERIFIED_TO_CITY_LEVEL",
            "verified_to_street_level": "VERIFIED_TO_STREET_LEVEL",
            "verified_to_premise_level": "VERIFIED_TO_PREMISE_LEVEL",
            "verified_to_suite_level": "VERIFIED_TO_SUITE_LEVEL",
            "coded_to_street_lavel": "CODED_TO_STREET_LAVEL",
            "coded_to_neighborhood_level": "CODED_TO_NEIGHBORHOOD_LEVEL",
            "coded_to_community_level": "CODED_TO_COMMUNITY_LEVEL",
            "coded_to_state_level": "CODED_TO_STATE_LEVEL",
            "coded_to_rooftop_level": "CODED_TO_ROOFTOP_LEVEL",
            "coded_to_rooftop_interpolation_level": "CODED_TO_ROOFTOP_INTERPOLATION_LEVEL",
            "name_max_length_exceeded": "NAME_MAX_LENGTH_EXCEEDED",
            "phone_max_length_exceeded": "PHONE_MAX_LENGTH_EXCEEDED",
            "company_name_max_length_exceeded": "COMPANY_NAME_MAX_LENGTH_EXCEEDED",
            "line1_min_max_length": "LINE1_MIN_MAX_LENGTH",
            "line2_max_length_exceeded": "LINE2_MAX_LENGTH_EXCEEDED",
            "line3_max_length_exceeded": "LINE3_MAX_LENGTH_EXCEEDED",
            "city_locality_max_length_exceeded": "CITY_LOCALITY_MAX_LENGTH_EXCEEDED",
            "state_province_max_length_exceeded": "STATE_PROVINCE_MAX_LENGTH_EXCEEDED",
            "invalid_postal_code": "INVALID_POSTAL_CODE",
            "country_invalid_length": "COUNTRY_INVALID_LENGTH",
            "address_not_found": "ADDRESS_NOT_FOUND",
        }
    
    @schemas.classproperty
    def UNSUPPORTED_COUNTRY(cls):
        return cls("unsupported_country")
    
    @schemas.classproperty
    def NON_SUPPORTED_COUNTRY(cls):
        return cls("non_supported_country")
    
    @schemas.classproperty
    def MINIMUM_POSTAL_CODE_VERIFICATION_FAILED(cls):
        return cls("minimum_postal_code_verification_failed")
    
    @schemas.classproperty
    def STREET_DOES_NOT_MATCH_UNIQUE_STREET_NAME(cls):
        return cls("street_does_not_match_unique_street_name")
    
    @schemas.classproperty
    def MULTIPLE_DIRECTIONALS(cls):
        return cls("multiple_directionals")
    
    @schemas.classproperty
    def MULTIPLE_MATCHES(cls):
        return cls("multiple_matches")
    
    @schemas.classproperty
    def SUITE_NOT_VALID(cls):
        return cls("suite_not_valid")
    
    @schemas.classproperty
    def SUITE_MISSING(cls):
        return cls("suite_missing")
    
    @schemas.classproperty
    def INCOMPATIBLE_PAIRED_LABELS(cls):
        return cls("incompatible_paired_labels")
    
    @schemas.classproperty
    def INVALID_HOUSE_NUMBER(cls):
        return cls("invalid_house_number")
    
    @schemas.classproperty
    def MISSING_HOUSE_NUMBER(cls):
        return cls("missing_house_number")
    
    @schemas.classproperty
    def INVALID_BOX_NUMBER(cls):
        return cls("invalid_box_number")
    
    @schemas.classproperty
    def INVALID_CHARGE_EVENT(cls):
        return cls("invalid_charge_event")
    
    @schemas.classproperty
    def MISSING_BOX_NUMBER(cls):
        return cls("missing_box_number")
    
    @schemas.classproperty
    def MISSING_CMRA_OR_PRIVATE_MAIL_BOX_NUMBER(cls):
        return cls("missing_cmra_or_private_mail_box_number")
    
    @schemas.classproperty
    def SUITE_HAS_NO_SECONDARIES(cls):
        return cls("suite_has_no_secondaries")
    
    @schemas.classproperty
    def POSTAL_CODE_CHANGED_OR_ADDED(cls):
        return cls("postal_code_changed_or_added")
    
    @schemas.classproperty
    def STATE_PROVINCE_CHANGED_OR_ADDED(cls):
        return cls("state_province_changed_or_added")
    
    @schemas.classproperty
    def CITY_LOCALITY_CHANGED_OR_ADDED(cls):
        return cls("city_locality_changed_or_added")
    
    @schemas.classproperty
    def URBANIZATION_CHANGED(cls):
        return cls("urbanization_changed")
    
    @schemas.classproperty
    def STREET_NAME_SPELLING_CHANGED_OR_ADDED(cls):
        return cls("street_name_spelling_changed_or_added")
    
    @schemas.classproperty
    def STREET_NAME_TYPE_CHANGED_OR_ADDED(cls):
        return cls("street_name_type_changed_or_added")
    
    @schemas.classproperty
    def STREET_DIRECTION_CHANGED_OR_ADDED(cls):
        return cls("street_direction_changed_or_added")
    
    @schemas.classproperty
    def SUITE_TYPE_CHANGED_OR_ADDED(cls):
        return cls("suite_type_changed_or_added")
    
    @schemas.classproperty
    def SUITE_UNIT_NUMBER_CHANGED_OR_ADDED(cls):
        return cls("suite_unit_number_changed_or_added")
    
    @schemas.classproperty
    def DOUBLE_DEPENDENT_LOCALITY_CHANGED_OR_ADDED(cls):
        return cls("double_dependent_locality_changed_or_added")
    
    @schemas.classproperty
    def SUBADMINISTRATIVE_AREA_CHANGED_OR_ADDED(cls):
        return cls("subadministrative_area_changed_or_added")
    
    @schemas.classproperty
    def SUBNATIONAL_AREA_CHANGED_OR_ADDED(cls):
        return cls("subnational_area_changed_or_added")
    
    @schemas.classproperty
    def PO_BOX_CHANGED_OR_ADDED(cls):
        return cls("po_box_changed_or_added")
    
    @schemas.classproperty
    def PREMISE_TYPE_CHANGED_OR_ADDED(cls):
        return cls("premise_type_changed_or_added")
    
    @schemas.classproperty
    def HOUSE_NUMBER_CHANGED(cls):
        return cls("house_number_changed")
    
    @schemas.classproperty
    def ORGANIZATION_CHANGED_OR_ADDED(cls):
        return cls("organization_changed_or_added")
    
    @schemas.classproperty
    def PARTIALLY_VERIFIED_TO_STATE_LEVEL(cls):
        return cls("partially_verified_to_state_level")
    
    @schemas.classproperty
    def PARTIALLY_VERIFIED_TO_CITY_LEVEL(cls):
        return cls("partially_verified_to_city_level")
    
    @schemas.classproperty
    def PARTIALLY_VERIFIED_TO_STREET_LEVEL(cls):
        return cls("partially_verified_to_street_level")
    
    @schemas.classproperty
    def PARTIALLY_VERIFIED_TO_PREMISE_LEVEL(cls):
        return cls("partially_verified_to_premise_level")
    
    @schemas.classproperty
    def VERIFIED_TO_STATE_LEVEL(cls):
        return cls("verified_to_state_level")
    
    @schemas.classproperty
    def VERIFIED_TO_CITY_LEVEL(cls):
        return cls("verified_to_city_level")
    
    @schemas.classproperty
    def VERIFIED_TO_STREET_LEVEL(cls):
        return cls("verified_to_street_level")
    
    @schemas.classproperty
    def VERIFIED_TO_PREMISE_LEVEL(cls):
        return cls("verified_to_premise_level")
    
    @schemas.classproperty
    def VERIFIED_TO_SUITE_LEVEL(cls):
        return cls("verified_to_suite_level")
    
    @schemas.classproperty
    def CODED_TO_STREET_LAVEL(cls):
        return cls("coded_to_street_lavel")
    
    @schemas.classproperty
    def CODED_TO_NEIGHBORHOOD_LEVEL(cls):
        return cls("coded_to_neighborhood_level")
    
    @schemas.classproperty
    def CODED_TO_COMMUNITY_LEVEL(cls):
        return cls("coded_to_community_level")
    
    @schemas.classproperty
    def CODED_TO_STATE_LEVEL(cls):
        return cls("coded_to_state_level")
    
    @schemas.classproperty
    def CODED_TO_ROOFTOP_LEVEL(cls):
        return cls("coded_to_rooftop_level")
    
    @schemas.classproperty
    def CODED_TO_ROOFTOP_INTERPOLATION_LEVEL(cls):
        return cls("coded_to_rooftop_interpolation_level")
    
    @schemas.classproperty
    def NAME_MAX_LENGTH_EXCEEDED(cls):
        return cls("name_max_length_exceeded")
    
    @schemas.classproperty
    def PHONE_MAX_LENGTH_EXCEEDED(cls):
        return cls("phone_max_length_exceeded")
    
    @schemas.classproperty
    def COMPANY_NAME_MAX_LENGTH_EXCEEDED(cls):
        return cls("company_name_max_length_exceeded")
    
    @schemas.classproperty
    def LINE1_MIN_MAX_LENGTH(cls):
        return cls("line1_min_max_length")
    
    @schemas.classproperty
    def LINE2_MAX_LENGTH_EXCEEDED(cls):
        return cls("line2_max_length_exceeded")
    
    @schemas.classproperty
    def LINE3_MAX_LENGTH_EXCEEDED(cls):
        return cls("line3_max_length_exceeded")
    
    @schemas.classproperty
    def CITY_LOCALITY_MAX_LENGTH_EXCEEDED(cls):
        return cls("city_locality_max_length_exceeded")
    
    @schemas.classproperty
    def STATE_PROVINCE_MAX_LENGTH_EXCEEDED(cls):
        return cls("state_province_max_length_exceeded")
    
    @schemas.classproperty
    def INVALID_POSTAL_CODE(cls):
        return cls("invalid_postal_code")
    
    @schemas.classproperty
    def COUNTRY_INVALID_LENGTH(cls):
        return cls("country_invalid_length")
    
    @schemas.classproperty
    def ADDRESS_NOT_FOUND(cls):
        return cls("address_not_found")
