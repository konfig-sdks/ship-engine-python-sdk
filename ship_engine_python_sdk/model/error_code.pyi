# coding: utf-8

"""
    ShipEngine API

    ShipEngine's easy-to-use REST API lets you manage all of your shipping needs without worrying about the complexities of different carrier APIs and protocols. We handle all the heavy lifting so you can focus on providing a first-class shipping experience for your customers at the best possible prices.  Each of ShipEngine's features can be used by itself or in conjunction with each other to build powerful shipping functionality into your application or service.  ## Getting Started If you're new to REST APIs then be sure to read our [introduction to REST](https://www.shipengine.com/docs/rest/) to understand the basics.  Learn how to [authenticate yourself to ShipEngine](https://www.shipengine.com/docs/auth/), and then use our [sandbox environment](https://www.shipengine.com/docs/sandbox/) to kick the tires and get familiar with our API. If you run into any problems, then be sure to check the [error handling guide](https://www.shipengine.com/docs/errors/) for tips.  Here are some step-by-step **tutorials** to get you started:    - [Learn how to create your first shipping label](https://www.shipengine.com/docs/labels/create-a-label/)   - [Calculate shipping costs and compare rates across carriers](https://www.shipengine.com/docs/rates/)   - [Track packages on-demand or in real time](https://www.shipengine.com/docs/tracking/)   - [Validate mailing addresses anywhere on Earth](https://www.shipengine.com/docs/addresses/validation/)   ## Shipping Labels for Every Major Carrier ShipEngine makes it easy to [create shipping labels for any carrier](https://www.shipengine.com/docs/labels/create-a-label/) and [download them](https://www.shipengine.com/docs/labels/downloading/) in a [variety of file formats](https://www.shipengine.com/docs/labels/formats/). You can even customize labels with your own [messages](https://www.shipengine.com/docs/labels/messages/) and [images](https://www.shipengine.com/docs/labels/branding/).   ## Real-Time Package Tracking With ShipEngine you can [get the current status of a package](https://www.shipengine.com/docs/tracking/) or [subscribe to real-time tracking updates](https://www.shipengine.com/docs/tracking/webhooks/) via webhooks. You can also create [custimized tracking pages](https://www.shipengine.com/docs/tracking/branded-tracking-page/) with your own branding so your customers will always know where their package is.   ## Compare Shipping Costs Across Carriers Make sure you ship as cost-effectively as possible by [comparing rates across carriers](https://www.shipengine.com/docs/rates/get-shipment-rates/) using the ShipEngine Rates API. Or if you don't know the full shipment details yet, then you can [get rate estimates](https://www.shipengine.com/docs/rates/estimate/) with limited address info.   ## Worldwide Address Validation ShipEngine supports [address validation](https://www.shipengine.com/docs/addresses/validation/) for virtually [every country on Earth](https://www.shipengine.com/docs/addresses/validation/countries/), including the United States, Canada, Great Britain, Australia, Germany, France, Norway, Spain, Sweden, Israel, Italy, and over 160 others. 

    The version of the OpenAPI document: 1.1.202403202303
    Contact: sales@shipengine.com
    Created by: https://www.shipengine.com/contact/
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from ship_engine_python_sdk import schemas  # noqa: F401


class ErrorCode(
    schemas.EnumBase,
    schemas.StrSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)

    The error code specified for the failed API Call
    """
    
    @schemas.classproperty
    def AUTO_FUND_NOT_SUPPORTED(cls):
        return cls("auto_fund_not_supported")
    
    @schemas.classproperty
    def BATCH_CANNOT_BE_MODIFIED(cls):
        return cls("batch_cannot_be_modified")
    
    @schemas.classproperty
    def CARRIER_CONFLICT(cls):
        return cls("carrier_conflict")
    
    @schemas.classproperty
    def CARRIER_DISCONNECTED(cls):
        return cls("carrier_disconnected")
    
    @schemas.classproperty
    def CARRIER_NOT_CONNECTED(cls):
        return cls("carrier_not_connected")
    
    @schemas.classproperty
    def CARRIER_NOT_SUPPORTED(cls):
        return cls("carrier_not_supported")
    
    @schemas.classproperty
    def CONFIRMATION_NOT_SUPPORTED(cls):
        return cls("confirmation_not_supported")
    
    @schemas.classproperty
    def CUSTOMS_ITEMS_REQUIRED(cls):
        return cls("customs_items_required")
    
    @schemas.classproperty
    def DEFAULT_WAREHOUSE_CANNOT_BE_DELETED(cls):
        return cls("default_warehouse_cannot_be_deleted")
    
    @schemas.classproperty
    def FIELD_CONFLICT(cls):
        return cls("field_conflict")
    
    @schemas.classproperty
    def FIELD_VALUE_REQUIRED(cls):
        return cls("field_value_required")
    
    @schemas.classproperty
    def FORBIDDEN(cls):
        return cls("forbidden")
    
    @schemas.classproperty
    def IDENTIFIER_CONFLICT(cls):
        return cls("identifier_conflict")
    
    @schemas.classproperty
    def IDENTIFIERS_MUST_MATCH(cls):
        return cls("identifiers_must_match")
    
    @schemas.classproperty
    def INCOMPATIBLE_PAIRED_LABELS(cls):
        return cls("incompatible_paired_labels")
    
    @schemas.classproperty
    def INSUFFICIENT_FUNDS(cls):
        return cls("insufficient_funds")
    
    @schemas.classproperty
    def INVALID_ADDRESS(cls):
        return cls("invalid_address")
    
    @schemas.classproperty
    def INVALID_BILLING_PLAN(cls):
        return cls("invalid_billing_plan")
    
    @schemas.classproperty
    def INVALID_CHARGE_EVENT(cls):
        return cls("invalid_charge_event")
    
    @schemas.classproperty
    def INVALID_FIELD_VALUE(cls):
        return cls("invalid_field_value")
    
    @schemas.classproperty
    def INVALID_IDENTIFIER(cls):
        return cls("invalid_identifier")
    
    @schemas.classproperty
    def INVALID_OBJECT(cls):
        return cls("invalid_object")
    
    @schemas.classproperty
    def INVALID_STATUS(cls):
        return cls("invalid_status")
    
    @schemas.classproperty
    def INVALID_STRING_LENGTH(cls):
        return cls("invalid_string_length")
    
    @schemas.classproperty
    def LABEL_IMAGES_NOT_SUPPORTED(cls):
        return cls("label_images_not_supported")
    
    @schemas.classproperty
    def METER_FAILURE(cls):
        return cls("meter_failure")
    
    @schemas.classproperty
    def NO_RATES_RETURNED(cls):
        return cls("no_rates_returned")
    
    @schemas.classproperty
    def ORDER_SOURCE_NOT_ACTIVE(cls):
        return cls("order_source_not_active")
    
    @schemas.classproperty
    def RATE_LIMIT_EXCEEDED(cls):
        return cls("rate_limit_exceeded")
    
    @schemas.classproperty
    def REFRESH_NOT_SUPPORTED(cls):
        return cls("refresh_not_supported")
    
    @schemas.classproperty
    def REQUEST_BODY_REQUIRED(cls):
        return cls("request_body_required")
    
    @schemas.classproperty
    def RETURN_LABEL_NOT_SUPPORTED(cls):
        return cls("return_label_not_supported")
    
    @schemas.classproperty
    def SETTINGS_NOT_SUPPORTED(cls):
        return cls("settings_not_supported")
    
    @schemas.classproperty
    def SUBSCRIPTION_INACTIVE(cls):
        return cls("subscription_inactive")
    
    @schemas.classproperty
    def TERMS_NOT_ACCEPTED(cls):
        return cls("terms_not_accepted")
    
    @schemas.classproperty
    def TRACKING_NOT_SUPPORTED(cls):
        return cls("tracking_not_supported")
    
    @schemas.classproperty
    def TRIAL_EXPIRED(cls):
        return cls("trial_expired")
    
    @schemas.classproperty
    def UNAUTHORIZED(cls):
        return cls("unauthorized")
    
    @schemas.classproperty
    def UNKNOWN(cls):
        return cls("unknown")
    
    @schemas.classproperty
    def UNSPECIFIED(cls):
        return cls("unspecified")
    
    @schemas.classproperty
    def VERIFICATION_FAILURE(cls):
        return cls("verification_failure")
    
    @schemas.classproperty
    def WAREHOUSE_CONFLICT(cls):
        return cls("warehouse_conflict")
    
    @schemas.classproperty
    def WEBHOOK_EVENT_TYPE_CONFLICT(cls):
        return cls("webhook_event_type_conflict")
